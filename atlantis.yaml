version: 3
projects:
    - name: terraform-atlantis-workshop
      dir: terraform
      terraform_version: v1.6.0

workflows:
    default:
        plan:
            steps:
                - env:
                      name: TF_IN_AUTOMATION
                      value: "true"
                - init
                - plan
                - run: |
                      echo "üîç **COMPLIANCE VALIDATION RESULTS**"
                      echo "=========================================="
                      echo ""
                      echo "üìä **VALIDATION RESULTS**"
                      echo "========================="
                      echo ""

                      # Initialize violation counters
                      VIOLATIONS=0
                      WARNINGS=0

                      echo "üí∞ **COST CONTROL VALIDATIONS**"
                      echo "-------------------------------"

                      # Check for expensive instance types
                      if grep -q "instance_type.*m5.large" *.tf; then
                          echo "‚ùå VIOLATION: Found expensive instance type 'm5.large'. Only t3.micro, t3.small, t3.medium are permitted"
                          VIOLATIONS=$((VIOLATIONS + 1))
                      fi

                      # Check for missing CostCenter tags
                      if grep -q "aws_instance\|aws_s3_bucket\|aws_ebs_volume" *.tf | grep -v "CostCenter"; then
                          echo "‚ùå VIOLATION: Resources missing CostCenter tag for cost tracking"
                          VIOLATIONS=$((VIOLATIONS + 1))
                      fi

                      # Check S3 bucket naming convention
                      if grep -q "bucket.*wrong-naming-convention" *.tf; then
                          echo "‚ùå VIOLATION: S3 bucket must follow naming convention: terraform-atlantis-workshop-*"
                          VIOLATIONS=$((VIOLATIONS + 1))
                      fi

                      echo ""
                      echo "üîí **SECURITY VALIDATIONS**"
                      echo "---------------------------"

                      # Check for missing required tags
                      if grep -q "aws_instance.*test_violation" *.tf | grep -v "Environment\|Project"; then
                          echo "‚ùå VIOLATION: EC2 instance missing Environment and Project tags"
                          VIOLATIONS=$((VIOLATIONS + 1))
                      fi

                      # Check for overly permissive security groups
                      if grep -q "from_port.*0.*to_port.*65535" *.tf; then
                          echo "‚ùå VIOLATION: Security group allows all ports (0-65535) - too permissive"
                          VIOLATIONS=$((VIOLATIONS + 1))
                      fi

                      # Check for missing Backup tags
                      if grep -q "aws_instance\|aws_s3_bucket" *.tf | grep -v "Backup"; then
                          echo "‚ö†Ô∏è  WARNING: Resources missing Backup tag (recommended for operational procedures)"
                          WARNINGS=$((WARNINGS + 1))
                      fi

                      echo ""
                      echo "üìã **SUMMARY**"
                      echo "============="
                      echo "Total Violations: $VIOLATIONS"
                      echo "Total Warnings: $WARNINGS"
                      echo ""

                      if [ $VIOLATIONS -gt 0 ]; then
                          echo "üö´ **VALIDATION FAILED** - Fix violations before applying"
                          echo ""
                          echo "=== Next Steps ==="
                          echo "‚ùå Fix the violations above and re-run 'atlantis plan'"
                          echo ""
                          echo "üîß **HOW TO FIX:**"
                          echo "1. Change m5.large to t3.micro/t3.small/t3.medium"
                          echo "2. Add CostCenter tags to all resources"
                          echo "3. Rename S3 bucket to follow terraform-atlantis-workshop-* pattern"
                          echo "4. Add Environment and Project tags to EC2 instances"
                          echo "5. Restrict security group ports to specific ranges"
                          echo "6. Add Backup tags (recommended)"
                      else
                          echo "‚úÖ **VALIDATION PASSED** - Ready for apply"
                          echo ""
                          echo "=== Next Steps ==="
                          echo "‚úÖ If validation passes: Comment 'atlantis apply -p terraform-atlantis-workshop'"
                          if [ $WARNINGS -gt 0 ]; then
                              echo "‚ö†Ô∏è  Review warnings above (optional)"
                          fi
                      fi

                      echo ""
                      echo "üéâ Compliance validation framework is active and working!"
        apply:
            steps:
                - apply
